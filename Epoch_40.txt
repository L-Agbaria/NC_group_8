class FoodCNN(nn.Module):
    def __init__(self):
        super().__init__()
        self.conv1 = nn.Conv2d(3, 32, 3, 1, 1)
        self.bn1 = nn.BatchNorm2d(32)
        self.pool1 = nn.MaxPool2d(2, 2)  # 256 -> 128

        self.conv2 = nn.Conv2d(32, 64, 3, 1, 1)
        self.pool2 = nn.MaxPool2d(2, 2)  # 128 -> 64

        self.conv3 = nn.Conv2d(64, 128, 3, 1, 1)
        self.conv4 = nn.Conv2d(128, 256, 2, 2, 0)  # 64 -> 32
        self.bn2 = nn.BatchNorm2d(256)
        self.pool3 = nn.AvgPool2d(2, 2)  # 32 -> 16

        self.conv5 = nn.Conv2d(256, 512, 3, 1, 1)
        self.pool4 = nn.MaxPool2d(2, 2)  # 16 -> 8

        self.flat = nn.Flatten()

        self.fc1 = nn.Linear(512*8*8, 512*8)
        self.drop1 = nn.Dropout()

        self.fc2 = nn.Linear(512*8, 512)
        self.drop2 = nn.Dropout()

        self.fc3 = nn.Linear(512, 91)


    def forward(self, x):
        x = F.relu(self.bn1(self.conv1(x)))
        x = self.pool1(x)

        x = F.relu(self.conv2(x))
        x = self.pool2(x)

        x = F.relu(self.conv3(x))
        x = F.relu(self.bn2(self.conv4(x)))
        x = self.pool3(x)

        x = F.relu(self.conv5(x))
        x = self.pool4(x)

        x = self.flat(x)

        x = F.relu(self.fc1(x))
        x = self.drop1(x)
        
        x = F.relu(self.fc2(x))
        x = self.drop2(x)

        x = self.fc3(x)
        return x


# accuracy of 40.1% at epoch 44